{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","getFirestate","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23eac2a8.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li> <NavLink to=\"/create\">New Project</NavLink> </li>\n            <li> <a onClick={ props.signOut }>Log Out</a> </li>\n            <li> <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                {props.profile.initials}\n            </NavLink> </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return ( dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({\n                type: 'LOGIN_SUCCESS'\n            })\n        }).catch((err) => {\n            dispatch({\n                type: 'LOGIN_ERROR',\n                err\n            })\n        });\n\n    }\n}\n\nexport const signOut = () => {\n    return ( dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({\n                type: 'SIGNOUT_SUCCESS'\n            })\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email, \n            newUser.password\n        ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n        }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n        }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n        });\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li> <NavLink to=\"/signup\">Signup</NavLink> </li>\n            <li> <NavLink to=\"/signin\">Login</NavLink> </li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    const links = auth.uid ? <SignedInLinks profile={ profile }/> :  <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const {notifications} = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(notification => {\n                            return (\n                                <li key={notification.id}>\n                                    <span className=\"pink-text\">{notification.user} </span>\n                                    <span> {notification.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(notification.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n                    <p className=\"grey-text\">Created { moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n           { projects && projects.map(project => {\n               return (\n                    <Link to={ '/project/' + project.id } key={project.id} >\n                        <ProjectSummary project={project} />\n                    </Link>\n               )\n           })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render(){\n        const { projects, auth, notifications } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} /> \n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { \n            collection: 'projects',\n            orderBy: ['createdAt', 'desc']\n        },\n        {\n            collection: 'notifications',\n            limit: 3,\n            orderBy: ['time', 'desc']\n        }\n    ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux';  \nimport { firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props \n    if(!auth.uid) return <Redirect to='/signin' />\n\n    if( project ) {\n        return (\n            <div className=\"container project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{ project.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by { project.authorFirstName } { project.authorLastName } </div>\n                        <div>Created { moment(project.createdAt.toDate()).calendar() }</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    } \n}\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n       { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n       e.preventDefault();\n       this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props\n        if(auth.uid) return <Redirect to='/' /> \n        return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n       e.preventDefault();\n       this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n        if(auth.uid) return <Redirect to='/' />\n\n         return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p> { authError } </p> : null }\n                    </div>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n} \n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n       e.preventDefault();\n       //console.log(this.state)\n       this.props.createProject(this.state)\n       this.props.history.push('/')\n    }\n\n    render() {\n        const { auth } = this.props\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirestate, getFirestore }) => {\n        // Make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project\n            })\n        }).catch((err) => {\n            dispatch({\n                type: 'CREATE_PROJECT_ERROR',\n                err\n            })\n        })\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />  \n          <Switch> \n            <Route exact path=\"/\" component={ Dashboard } />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>  \n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch( action.type ) {\n        case 'LOGIN_ERROR':\n            console.log('Login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default: \n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyBd433rssNxG-jtC7koNRxiTf38WopChhg\",\n    authDomain: \"nicolasfig-marioplan.firebaseapp.com\",\n    databaseURL: \"https://nicolasfig-marioplan.firebaseio.com\",\n    projectId: \"nicolasfig-marioplan\",\n    storageBucket: \"nicolasfig-marioplan.appspot.com\",\n    messagingSenderId: \"910559902687\"\n  };\n\n  firebase.initializeApp(config);\n  firebase.firestore().settings({\n      timestampsInSnapshots: true\n  });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux'; \nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'; \nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n        compose(\n            applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n            reduxFirestore(fbConfig),\n            reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n})\n\n\n\n"],"sourceRoot":""}